service: dgnx-website
frameworkVersion: '2 || 3'

useDotenv: true

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-api-cloudfront

custom:
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}
  serviceName: ${self:service}-${self:custom.currentStage}
  ddb:
    stages:
      - default
      - dev
    tableNames:
      dexscreenerPairCache: ${self:custom.serviceName}-dexscreenerPairCache
      dexscreenerTokenCache: ${self:custom.serviceName}-dexscreenerTokenCache
      stakexCustomization: ${self:custom.serviceName}-stakexCustomization
      # stakexProtocols: ${self:custom.serviceName}-stakexProtocols
      # stakexAnnualPercentageLogs: ${self:custom.serviceName}-stakexAnnualPercentageLogs
    deletionPolicy:
      default: Retain
      dev: Retain
      staging: Retain
      production: Retain
    updateReplacePolicy:
      default: Retain
      dev: Retain
      staging: Retain
      production: Retain
  corsAllowedOrigin:
    dev: http://localhost:3000
    staging: https://staging.dgnx.finance
    production: https://dgnx.finance
  webpack:
    isLocal: false
    # isLocal: true

provider:
  name: aws
  region: eu-west-1
  profile: dgnx
  stage: dev
  runtime: nodejs18.x

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource:
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.ddb.tableNames.dexscreenerPairCache}*'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.ddb.tableNames.dexscreenerTokenCache}*'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.ddb.tableNames.stakexCustomization}*'
            # - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.ddb.tableNames.stakexProtocols}*'
            # - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.ddb.tableNames.stakexAnnualPercentageLogs}*'

  environment:
    DB_TABLE_NAME_DEXSCREENER_PAIR_CACHE: ${self:custom.ddb.tableNames.dexscreenerPairCache}
    DB_TABLE_NAME_DEXSCREENER_TOKEN_CACHE: ${self:custom.ddb.tableNames.dexscreenerTokenCache}
    DB_TABLE_NAME_STAKEX_CUSTOMIZATION: ${self:custom.ddb.tableNames.stakexCustomization}
    # DB_TABLE_NAME_STAKEX_PROTOCOLS: ${self:custom.ddb.tableNames.stakexProtocols}
    # DB_TABLE_NAME_STAKEX_ANNUAL_PERCENTAGE_LOGS: ${self:custom.ddb.tableNames.stakexAnnualPercentageLogs}
    CORS_ALLOWED_ORIGIN: ${self:custom.corsAllowedOrigin.${opt:stage, self:provider.stage}}
    SNOWTRACE_API_KEY: ${param:SNOWTRACE_API_KEY}
    PINATA_API_KEY:  ${param:PINATA_API_KEY}

functions:
  snowtraceProxy:
    handler: snowtraceProxy/get.handler
    memorySize: 512
    timeout: 29
    events:
      - http:
          cors: true
          path: /snowtrace
          method: get

  dexscreenerProxyLatestDexTokens:
    handler: dexscreenerProxy/latestDexTokens.handler
    memorySize: 512
    timeout: 29
    events:
      - http:
          path: /latest/dex/tokens/{tokenAddress}
          request:
            parameters:
              paths:
                tokenAddress: true
          method: get
          cors: true

  dexscreenerProxyLatestDexPairs:
    handler: dexscreenerProxy/latestDexPairs.handler
    memorySize: 512
    timeout: 29
    events:
      - http:
          path: /latest/dex/pairs/{network}/{pairAddress}
          request:
            parameters:
              paths:
                network: true
                pairAddress: true
          method: get
          cors: true

  ipfsStakexCustomizationUpdate:
    handler: ipfs/stakex/customization/update.handler
    memorySize: 512
    timeout: 29
    events:
      - http:
          path: /ipfs/stakex/customization/update
          method: post
          cors: true

  ipfsStakexCustomizationFetch:
    handler: ipfs/stakex/customization/fetch.handler
    memorySize: 512
    timeout: 29
    events:
      - http:
          path: /ipfs/stakex/customization/fetch/{protocol}
          request:
            parameters:
              paths:
                protocol: true
          method: get
          cors: true

  # STAKEX API

  # STAKEX Automations
  stakexAutomationsCalculateApr:
    handler: stakex/automations/calculate-apr.handler
    events:
      - schedule:
          rate: rate(30 minutes)
          enabled: false

resources:
  Resources:
    dexscreenerPairCacheTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: ${self:custom.ddb.deletionPolicy.${opt:stage, 'default'}}
      UpdateReplacePolicy: ${self:custom.ddb.updateReplacePolicy.${opt:stage, 'default'}}
      Properties:
        TableName: ${self:custom.ddb.tableNames.dexscreenerPairCache}
        AttributeDefinitions:
          - AttributeName: PairKey # network#pairAddress
            AttributeType: S
        KeySchema:
          - AttributeName: PairKey
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

    dexscreenerTokenCacheTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: ${self:custom.ddb.deletionPolicy.${opt:stage, 'default'}}
      UpdateReplacePolicy: ${self:custom.ddb.updateReplacePolicy.${opt:stage, 'default'}}
      Properties:
        TableName: ${self:custom.ddb.tableNames.dexscreenerTokenCache}
        AttributeDefinitions:
          - AttributeName: TokenKey
            AttributeType: S
        KeySchema:
          - AttributeName: TokenKey
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

    stakexCustomizationTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: ${self:custom.ddb.deletionPolicy.${opt:stage, 'default'}}
      UpdateReplacePolicy: ${self:custom.ddb.updateReplacePolicy.${opt:stage, 'default'}}
      Properties:
        TableName: ${self:custom.ddb.tableNames.stakexCustomization}
        AttributeDefinitions:
          - AttributeName: CustomizationKey # which is the protocol address
            AttributeType: S
        KeySchema:
          - AttributeName: CustomizationKey
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

    # stakexProtocolsTable:
    #   Type: AWS::DynamoDB::Table
    #   DeletionPolicy: ${self:custom.ddb.deletionPolicy.${opt:stage, 'default'}}
    #   UpdateReplacePolicy: ${self:custom.ddb.updateReplacePolicy.${opt:stage, 'default'}}
    #   Properties:
    #     TableName: ${self:custom.ddb.tableNames.stakexProtocols}
    #     AttributeDefinitions:
    #       - AttributeName: ProtocolKey # which is the protocol address
    #         AttributeType: S
    #       - AttributeName: EnabledBlock
    #         AttributeType: N
    #       - AttributeName: NextUpdateBlock
    #         AttributeType: N
    #     KeySchema:
    #       - AttributeName: ProtocolKey
    #         KeyType: HASH
    #       - AttributeName: NextUpdateBlock
    #         KeyType: RANGE
    #     BillingMode: PAY_PER_REQUEST
    #     PointInTimeRecoverySpecification:
    #       PointInTimeRecoveryEnabled: true
    #     TimeToLiveSpecification:
    #       AttributeName: ttl
    #       Enabled: true

    # stakexAnnualPercentageLogsTable:
    #   Type: AWS::DynamoDB::Table
    #   DeletionPolicy: ${self:custom.ddb.deletionPolicy.${opt:stage, 'default'}}
    #   UpdateReplacePolicy: ${self:custom.ddb.updateReplacePolicy.${opt:stage, 'default'}}
    #   Properties:
    #     TableName: ${self:custom.ddb.tableNames.stakexAnnualPercentageLogs}
    #     AttributeDefinitions:
    #       - AttributeName: LogKey # Protocol#BlockNumber
    #         AttributeType: S
    #       - AttributeName: Protocol
    #         AttributeType: S
    #       - AttributeName: BlockNumber
    #         AttributeType: N
    #       - AttributeName: BlockTime
    #         AttributeType: N
    #       - AttributeName: Created
    #         AttributeType: N
    #     KeySchema:
    #       - AttributeName: ProtocolKey
    #         KeyType: HASH
    #       - AttributeName: BlockTime
    #         KeyType: RANGE
    #     GlobalSecondaryIndexes:
    #       - IndexName: ProtocolIndex
    #         KeySchema:
    #           - AttributeName: Protocol
    #             KeyType: HASH
    #         Projection:
    #           ProjectionType: 'ALL'
    #     BillingMode: PAY_PER_REQUEST
    #     PointInTimeRecoverySpecification:
    #       PointInTimeRecoveryEnabled: true
    #     TimeToLiveSpecification:
    #       AttributeName: ttl
    #       Enabled: true
